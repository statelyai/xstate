// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@xstate/graph getPathFromEvents() should return a path to the last entered state by the event sequence: path from events 1`] = `
Object {
  "state": Object {
    "red": "flashing",
  },
  "steps": Array [
    Object {
      "eventType": "TIMER",
      "state": "green",
    },
    Object {
      "eventType": "TIMER",
      "state": "yellow",
    },
    Object {
      "eventType": "TIMER",
      "state": Object {
        "red": "walk",
      },
    },
    Object {
      "eventType": "POWER_OUTAGE",
      "state": "green",
    },
  ],
}
`;

exports[`@xstate/graph getShortestPaths() should return a mapping of shortest paths to all states (parallel): shortest paths parallel 1`] = `
Array [
  Object {
    "state": Object {
      "a": "a1",
      "b": "b1",
    },
    "steps": Array [],
  },
  Object {
    "state": Object {
      "a": "a2",
      "b": "b2",
    },
    "steps": Array [
      Object {
        "eventType": "2",
        "state": Object {
          "a": "a1",
          "b": "b1",
        },
      },
    ],
  },
  Object {
    "state": Object {
      "a": "a3",
      "b": "b3",
    },
    "steps": Array [
      Object {
        "eventType": "3",
        "state": Object {
          "a": "a1",
          "b": "b1",
        },
      },
    ],
  },
]
`;

exports[`@xstate/graph getShortestPaths() should return a mapping of shortest paths to all states: shortest paths 1`] = `
Array [
  Object {
    "state": "green",
    "steps": Array [],
  },
  Object {
    "state": "yellow",
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
    ],
  },
  Object {
    "state": Object {
      "red": "flashing",
    },
    "steps": Array [
      Object {
        "eventType": "POWER_OUTAGE",
        "state": "green",
      },
    ],
  },
  Object {
    "state": Object {
      "red": "walk",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "TIMER",
        "state": "yellow",
      },
    ],
  },
  Object {
    "state": Object {
      "red": "wait",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "TIMER",
        "state": "yellow",
      },
      Object {
        "eventType": "PED_COUNTDOWN",
        "state": Object {
          "red": "walk",
        },
      },
    ],
  },
  Object {
    "state": Object {
      "red": "stop",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "TIMER",
        "state": "yellow",
      },
      Object {
        "eventType": "PED_COUNTDOWN",
        "state": Object {
          "red": "walk",
        },
      },
      Object {
        "eventType": "PED_COUNTDOWN",
        "state": Object {
          "red": "wait",
        },
      },
    ],
  },
]
`;

exports[`@xstate/graph getSimplePaths() should return a mapping of arrays of simple paths to all states 2`] = `
Array [
  Object {
    "state": "green",
    "steps": Array [],
  },
  Object {
    "state": "yellow",
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
    ],
  },
  Object {
    "state": Object {
      "red": "flashing",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "TIMER",
        "state": "yellow",
      },
      Object {
        "eventType": "PED_COUNTDOWN",
        "state": Object {
          "red": "walk",
        },
      },
      Object {
        "eventType": "PED_COUNTDOWN",
        "state": Object {
          "red": "wait",
        },
      },
      Object {
        "eventType": "POWER_OUTAGE",
        "state": Object {
          "red": "stop",
        },
      },
    ],
  },
  Object {
    "state": Object {
      "red": "flashing",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "TIMER",
        "state": "yellow",
      },
      Object {
        "eventType": "PED_COUNTDOWN",
        "state": Object {
          "red": "walk",
        },
      },
      Object {
        "eventType": "POWER_OUTAGE",
        "state": Object {
          "red": "wait",
        },
      },
    ],
  },
  Object {
    "state": Object {
      "red": "flashing",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "TIMER",
        "state": "yellow",
      },
      Object {
        "eventType": "POWER_OUTAGE",
        "state": Object {
          "red": "walk",
        },
      },
    ],
  },
  Object {
    "state": Object {
      "red": "flashing",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "POWER_OUTAGE",
        "state": "yellow",
      },
    ],
  },
  Object {
    "state": Object {
      "red": "flashing",
    },
    "steps": Array [
      Object {
        "eventType": "POWER_OUTAGE",
        "state": "green",
      },
    ],
  },
  Object {
    "state": Object {
      "red": "walk",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "TIMER",
        "state": "yellow",
      },
    ],
  },
  Object {
    "state": Object {
      "red": "wait",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "TIMER",
        "state": "yellow",
      },
      Object {
        "eventType": "PED_COUNTDOWN",
        "state": Object {
          "red": "walk",
        },
      },
    ],
  },
  Object {
    "state": Object {
      "red": "stop",
    },
    "steps": Array [
      Object {
        "eventType": "TIMER",
        "state": "green",
      },
      Object {
        "eventType": "TIMER",
        "state": "yellow",
      },
      Object {
        "eventType": "PED_COUNTDOWN",
        "state": Object {
          "red": "walk",
        },
      },
      Object {
        "eventType": "PED_COUNTDOWN",
        "state": Object {
          "red": "wait",
        },
      },
    ],
  },
]
`;

exports[`@xstate/graph getSimplePaths() should return a mapping of simple paths to all states (parallel): simple paths parallel 1`] = `
Array [
  Object {
    "state": Object {
      "a": "a1",
      "b": "b1",
    },
    "steps": Array [],
  },
  Object {
    "state": Object {
      "a": "a2",
      "b": "b2",
    },
    "steps": Array [
      Object {
        "eventType": "2",
        "state": Object {
          "a": "a1",
          "b": "b1",
        },
      },
    ],
  },
  Object {
    "state": Object {
      "a": "a3",
      "b": "b3",
    },
    "steps": Array [
      Object {
        "eventType": "2",
        "state": Object {
          "a": "a1",
          "b": "b1",
        },
      },
      Object {
        "eventType": "3",
        "state": Object {
          "a": "a2",
          "b": "b2",
        },
      },
    ],
  },
  Object {
    "state": Object {
      "a": "a3",
      "b": "b3",
    },
    "steps": Array [
      Object {
        "eventType": "3",
        "state": Object {
          "a": "a1",
          "b": "b1",
        },
      },
    ],
  },
]
`;

exports[`@xstate/graph getSimplePaths() should return multiple paths for equivalent transitions: simple paths equal transitions 1`] = `
Array [
  Object {
    "state": "a",
    "steps": Array [],
  },
  Object {
    "state": "b",
    "steps": Array [
      Object {
        "eventType": "FOO",
        "state": "a",
      },
    ],
  },
  Object {
    "state": "b",
    "steps": Array [
      Object {
        "eventType": "BAR",
        "state": "a",
      },
    ],
  },
]
`;

exports[`@xstate/graph getSimplePaths() should return value-based paths: simple paths context 1`] = `
Array [
  Object {
    "state": "start",
    "steps": Array [],
  },
  Object {
    "state": "start",
    "steps": Array [
      Object {
        "eventType": "INC",
        "state": "start",
      },
    ],
  },
  Object {
    "state": "start",
    "steps": Array [
      Object {
        "eventType": "INC",
        "state": "start",
      },
      Object {
        "eventType": "INC",
        "state": "start",
      },
    ],
  },
  Object {
    "state": "finish",
    "steps": Array [
      Object {
        "eventType": "INC",
        "state": "start",
      },
      Object {
        "eventType": "INC",
        "state": "start",
      },
      Object {
        "eventType": "INC",
        "state": "start",
      },
    ],
  },
]
`;

exports[`@xstate/graph toDirectedGraph should represent a statechart as a directed graph 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "edges": Array [
        Object {
          "label": Object {
            "text": "TIMER",
          },
          "source": "light.green",
          "target": "light.yellow",
        },
      ],
      "id": "light.green",
    },
    Object {
      "children": Array [],
      "edges": Array [
        Object {
          "label": Object {
            "text": "TIMER",
          },
          "source": "light.yellow",
          "target": "light.red",
        },
      ],
      "id": "light.yellow",
    },
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "edges": Array [
            Object {
              "label": Object {
                "text": "COUNTDOWN",
              },
              "source": "light.red.walk",
              "target": "light.red.wait",
            },
          ],
          "id": "light.red.walk",
        },
        Object {
          "children": Array [],
          "edges": Array [
            Object {
              "label": Object {
                "text": "COUNTDOWN",
              },
              "source": "light.red.wait",
              "target": "light.red.stop",
            },
          ],
          "id": "light.red.wait",
        },
        Object {
          "children": Array [],
          "edges": Array [
            Object {
              "label": Object {
                "text": "COUNTDOWN",
              },
              "source": "light.red.stop",
              "target": "light.red.finished",
            },
          ],
          "id": "light.red.stop",
        },
        Object {
          "children": Array [],
          "edges": Array [],
          "id": "light.red.finished",
        },
      ],
      "edges": Array [
        Object {
          "label": Object {
            "text": "done.state.light.red",
          },
          "source": "light.red",
          "target": "light.green",
        },
      ],
      "id": "light.red",
    },
  ],
  "edges": Array [],
  "id": "light",
}
`;

exports[`shortest paths for reducers 1`] = `
Array [
  Object {
    "state": 0,
    "steps": Array [],
  },
  Object {
    "state": 1,
    "steps": Array [
      Object {
        "eventType": "a",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 1,
    "steps": Array [
      Object {
        "eventType": "b",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 1,
    "steps": Array [
      Object {
        "eventType": "b",
        "state": 0,
      },
      Object {
        "eventType": "reset",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 1,
    "steps": Array [
      Object {
        "eventType": "reset",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 1,
    "steps": Array [
      Object {
        "eventType": "reset",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 1,
      },
      Object {
        "eventType": "reset",
        "state": 2,
      },
      Object {
        "eventType": "b",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "reset",
        "state": 1,
      },
      Object {
        "eventType": "b",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "b",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "reset",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 1,
      },
      Object {
        "eventType": "reset",
        "state": 2,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "reset",
        "state": 1,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "b",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 1,
      },
      Object {
        "eventType": "reset",
        "state": 2,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "b",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "reset",
        "state": 1,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "b",
        "state": 0,
      },
      Object {
        "eventType": "reset",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "reset",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 2,
    "steps": Array [
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 1,
      },
    ],
  },
  Object {
    "state": 2,
    "steps": Array [
      Object {
        "eventType": "b",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 1,
      },
    ],
  },
  Object {
    "state": 2,
    "steps": Array [
      Object {
        "eventType": "b",
        "state": 0,
      },
      Object {
        "eventType": "reset",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 1,
      },
    ],
  },
  Object {
    "state": 2,
    "steps": Array [
      Object {
        "eventType": "reset",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 1,
      },
    ],
  },
  Object {
    "state": 2,
    "steps": Array [
      Object {
        "eventType": "reset",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 0,
      },
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 1,
      },
    ],
  },
]
`;

exports[`simple paths for reducers 1`] = `
Array [
  Object {
    "state": 0,
    "steps": Array [],
  },
  Object {
    "state": 1,
    "steps": Array [
      Object {
        "eventType": "a",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "b",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 0,
    "steps": Array [
      Object {
        "eventType": "reset",
        "state": 0,
      },
    ],
  },
  Object {
    "state": 2,
    "steps": Array [
      Object {
        "eventType": "a",
        "state": 0,
      },
      Object {
        "eventType": "b",
        "state": 1,
      },
    ],
  },
]
`;
